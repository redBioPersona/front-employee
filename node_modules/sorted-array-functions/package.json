{
  "_args": [
    [
      {
        "raw": "sorted-array-functions@^1.3.0",
        "scope": null,
        "escapedName": "sorted-array-functions",
        "name": "sorted-array-functions",
        "rawSpec": "^1.3.0",
        "spec": ">=1.3.0 <2.0.0",
        "type": "range"
      },
      "D:\\webFinger\\MeteorMBES\\node_modules\\node-schedule"
    ]
  ],
  "_from": "sorted-array-functions@^1.3.0",
  "_hasShrinkwrap": false,
  "_id": "sorted-array-functions@1.3.0",
  "_location": "/sorted-array-functions",
  "_nodeVersion": "14.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sorted-array-functions_1.3.0_1598261486831_0.6916830752109484"
  },
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "6.14.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sorted-array-functions@^1.3.0",
    "scope": null,
    "escapedName": "sorted-array-functions",
    "name": "sorted-array-functions",
    "rawSpec": "^1.3.0",
    "spec": ">=1.3.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/node-schedule"
  ],
  "_resolved": "https://registry.npmjs.org/sorted-array-functions/-/sorted-array-functions-1.3.0.tgz",
  "_shasum": "8605695563294dffb2c9796d602bd8459f7a0dd5",
  "_shrinkwrap": null,
  "_spec": "sorted-array-functions@^1.3.0",
  "_where": "D:\\webFinger\\MeteorMBES\\node_modules\\node-schedule",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/sorted-array-functions/issues"
  },
  "dependencies": {},
  "description": "Maintain and search through a sorted array using some low level functions",
  "devDependencies": {
    "standard": "^8.4.0",
    "tape": "^4.6.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2sqgzeFlid6N4Z2fUQ1cvFmTOLRi/sEDzSQ0OKYchqgoPmQBVyM3959qYx3fpS6Esef80KjmpgPeEr028dP3OA==",
    "shasum": "8605695563294dffb2c9796d602bd8459f7a0dd5",
    "tarball": "https://registry.npmjs.org/sorted-array-functions/-/sorted-array-functions-1.3.0.tgz",
    "fileCount": 7,
    "unpackedSize": 16576,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfQ4jvCRA9TVsSAnZWagAAMgAQAJzIFAaavLFERAPwNeOv\nZBHl47W2nfoKrXl4DqKzLN/Ql95H11Lltp8lZZO1drbTdkvSGnCsyey+7ilW\nviYCLjEKs0vjTTXKNsWpnD5MnbCTuK6XNQ59wJF6sdP4Lc8MbTrvwkKqcC9R\nJu2k8uak59TdS1+qnISWMME6NOEHoMSL5APB+rAH+nyuYJvGR2Di9SagzVhk\n1mjQUQaX0aHAhCB//C0G8/IjA/SWRm0dzPI57JYFlWbKu8Ojp3Oxd+LPWuwe\nHYB5ehdx1GFX6eJrygh+q1FImbzTEjq1ynCKVP7IYTK0VzULBCl6tv/OJsD8\nL5mw8EjHEmZi9N9T3p8SRJbLXOYZ2Z//pPaRq5kWRrrvwuV7DXY2QWGhlYLd\neiKWBC4fHOCfRulzljbibOnGx4wGB60H5G4WraMs4Iezf+fMcWEh1Qb3RklP\nJIo0XHPyLEpLhJ32Brhsee86n6cZbln+epHfoixjyQByGCjs6DfpQqU0un3w\nAoTT4BeEZt0pJeGmRdSgD3cLtbGM1TM3g8zYBk8l0s0uSU7lTX6+m8DyE3TF\noC/L8c0E8z28K0Bt1W56X3fAQGfzXXsgilj9blwMvj2nUZiP/Tr6kKtSmkE+\ncnh2orWcf3uPSLX46aL1KMimYi8q8niEtiofL6/sHnTBkvpK39OxFuGLgcdm\nqY4e\r\n=5rZw\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "82c6a4cbf5c1e667805a388d5d3ebedac0fe07c7",
  "homepage": "https://github.com/mafintosh/sorted-array-functions",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    }
  ],
  "name": "sorted-array-functions",
  "optionalDependencies": {},
  "readme": "# sorted-array-functions\n\nMaintain and search through a sorted array using some low level functions\n\n```\nnpm install sorted-array-functions\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/sorted-array-functions.svg?style=flat)](http://travis-ci.org/mafintosh/sorted-array-functions)\n\n## Usage\n\n``` js\nvar sorted = require('sorted-array-functions')\nvar list = []\n\nsorted.add(list, 1)\nsorted.add(list, 4)\nsorted.add(list, 2)\n\nconsole.log(list) // prints out [1, 2, 4]\nconsole.log(sorted.has(list, 2)) // returns true\nconsole.log(sorted.has(list, 3)) // returns false\nconsole.log(sorted.eq(list, 2)) // returns 1 (the index)\nconsole.log(sorted.gt(list, 2)) // returns 2\nconsole.log(sorted.gt(list, 4)) // returns -1\n```\n\n## API\n\n#### `sorted.add(list, value, [compare])`\n\nInsert a new value into the list sorted.\nOptionally you can use a custom compare function that returns, `compare(a, b)` that returns 1 if `a > b`, 0 if `a === b` and -1 if `a < b`.\n\n#### `sorted.addFromFront(list, value, [compare])`\n\nInserts a new value (same result as `sorted.add()`) optimized for prepend.\n\n#### `var bool = sorted.remove(list, value, [compare])`\n\nRemove a value. Returns true if the value was in the list.\n\n#### `var bool = sorted.has(list, value, [compare])`\n\nCheck if a value is in the list.\n\n#### `var index = sorted.eq(list, value, [compare])`\n\nGet the index of a value in the list (uses binary search).\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.gte(list, value, [compare])`\n\nGet the index of the first value that is `>=`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.gt(list, value, [compare])`\n\nGet the index of the first value that is `>`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.lte(list, value, [compare])`\n\nGet the index of the first value that is `<=`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.lt(list, value, [compare])`\n\nGet the index of the first value that is `<`.\nIf the value could not be found -1 is returned.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/sorted-array-functions.git"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "version": "1.3.0"
}
